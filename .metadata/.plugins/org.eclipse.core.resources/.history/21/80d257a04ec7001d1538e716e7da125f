package com.generation.farmacia.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/categorias")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class CategoriaController {
	
	@Autowired
	private CategoriaRepository CategoriaRepository;
	
	 @GetMapping
	    public ResponseEntity<List<Categoria>> getAll(){
	        return ResponseEntity.ok(categoriaRepository.findAll());
	    }
	 @GetMapping("/{id}")
	    public ResponseEntity<Categoria> getById(@PathVariable Long id){
	        return CategoriaRepository.findById(id)
	            .map(resposta -> ResponseEntity.ok(resposta))
	            .orElse(ResponseEntity.status(HttpStatus.NOT_FOUND).build());
	    }
	 @PostMapping
	    public ResponseEntity<Categoria> post(@Valid @RequestBody Categoria Categoria){
	        return ResponseEntity.status(HttpStatus.CREATED)
	                .body(CategoriaRepository.save(Categoria));
	        
	    }
	 @PutMapping
	    public ResponseEntity<Tema> put(@Valid @RequestBody Categoria Categoria){
	        return temaRepository.findById(Categoria.getId())
	            .map(resposta -> ResponseEntity.status(HttpStatus.CREATED)
	            .body(temaRepository.save(tema)))
	            .orElse(ResponseEntity.status(HttpStatus.NOT_FOUND).build());
	    }
	    
	    @ResponseStatus(HttpStatus.NO_CONTENT)
	    @DeleteMapping("/{id}")
	    public void delete(@PathVariable Long id) {
	        Optional<Tema> tema = temaRepository.findById(id);
	        
	        if(tema.isEmpty())
	            throw new ResponseStatusException(HttpStatus.NOT_FOUND);
	        
	        temaRepository.deleteById(id);              
	    }

	}